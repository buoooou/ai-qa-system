services:
  # Nacos服务注册中心
  nacos:
    image: nacos/nacos-server:v2.2.0
    container_name: ai-qa-nacos
    environment:
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=root123
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
      - NACOS_AUTH_ENABLE=true
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ai-qa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MySQL数据库服务
  mysql:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: ai-qa-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: ai_qa_system
      MYSQL_USER: aiqa
      MYSQL_PASSWORD: aiqa123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ai-qa-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # API网关服务
  api-gateway:
    build:
      context: ./backend-services/api-gateway
      dockerfile: Dockerfile
    container_name: ai-qa-gateway
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ai_qa_system
      - MYSQL_USERNAME=aiqa
      - MYSQL_PASSWORD=aiqa123
    networks:
      - ai-qa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 用户服务
  user-service:
    build:
      context: ./backend-services/user-service
      dockerfile: Dockerfile
    container_name: ai-qa-user-service
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ai_qa_system
      - MYSQL_USERNAME=aiqa
      - MYSQL_PASSWORD=aiqa123
    networks:
      - ai-qa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # QA服务
  qa-service:
    build:
      context: ./backend-services/qa-service
      dockerfile: Dockerfile
    container_name: ai-qa-service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=ai_qa_system
      - MYSQL_USERNAME=aiqa
      - MYSQL_PASSWORD=aiqa123
    networks:
      - ai-qa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-qa-frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
      - user-service
      - qa-service
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    networks:
      - ai-qa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# 网络配置
networks:
  ai-qa-network:
    driver: bridge
    name: ai-qa-network

# 数据卷配置
volumes:
  mysql_data:
    driver: local
    name: ai-qa-mysql-data