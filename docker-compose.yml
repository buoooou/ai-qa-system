version: '3.8'

services:
  api-gateway:
    build:
      context: ./backend-services
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - postgres
      - redis
    networks:
      - ai-network

  user-service:
    build:
      context: ./backend-services
      dockerfile: user-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - postgres
      - redis
    networks:
      - ai-network

  qa-service:
    build:
      context: ./backend-services
      dockerfile: qa-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - postgres
      - redis
    networks:
      - ai-network

  frontend:
    build:
      context: ./fronted
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
      - user-service
      - qa-service
    networks:
      - ai-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ai_qa_system
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ai-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - ai-network

networks:
  ai-network:
    driver: bridge

volumes:
  postgres-data:
