name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          fronted/package-lock.json

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install frontend dependencies
      working-directory: ./fronted
      run: npm ci

    - name: Build frontend
      working-directory: ./fronted
      run: npm run build

    - name: Test frontend
      working-directory: ./fronted
      run: npm run lint

    - name: Build backend services
      working-directory: ./backend-services
      run: mvn clean compile -DskipTests

    - name: Test backend services
      working-directory: ./backend-services
      run: mvn test

    - name: Build Docker images
      run: |
        docker-compose build --no-cache

    - name: Test Docker containers
      run: |
        docker-compose up -d
        sleep 30
        docker-compose ps
        docker-compose logs --tail=50
        docker-compose down
