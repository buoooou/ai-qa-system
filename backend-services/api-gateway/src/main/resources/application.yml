server:
  port: 8080 # 所有后端请求的入口
spring:
  application:
    name: api-gateway
  config:
    import:
      - "optional:nacos:${spring.application.name}.${spring.cloud.nacos.config.file-extension}"
      - "optional:nacos:shared-config.yml"
  cloud:
    nacos:
      discovery:
        server-addr: 18.144.11.177:8848
        # namespace: public
      # config:
      #   server-addr: 18.144.11.177:8848
      #   # 明确告诉 Nacos Config 默认的文件扩展名是 yml
      #   file-extension: yml
      #   group: DEFAULT_GROUP
      #   namespace: public
      #   shared-configs:
      #       - data-id: shared-config.yml
      #         group: DEFAULT_GROUP
      #         refresh: true
    gateway:
      discovery:
        locator:
          enabled: true # 开启基于服务发现的路由功能
          lower-case-service-id: true # 将服务名转为小写路径，e.g., user-service -> /user-service/**
      globalcors:
        # 全局CORS配置
        cors-configurations:
          '[/**]':
            # allowedOrigins: 
            #   - "http://localhost:3000"
            #   - "http://127.0.0.1:3000"
            #   - "http://10.0.2.191:3000"
            #   - "http://56.228.34.193:3000"
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      routes:
        - id: user_service_route
          uri: lb://user-service # lb:// 表示从Nacos负载均衡地选择一个user-service实例
          predicates:
            - Path=/api/user/** # 匹配所有/api/user/开头的请求
          filters:
            - StripPrefix=0

        - id: qa_service_route
          uri: lb://qa-service
          predicates:
            - Path=/api/qa/**
          filters:
            - StripPrefix=0
            - name: RequestRateLimiter
              args:
                rate-limiter: "#{@inMemoryRateLimiter}"
                key-resolver: "#{@ipKeyResolver}"
                replenish-rate: 10000
                burst-capacity: 100000
                requested-tokens: 1
    # 负载均衡配置
    loadbalancer:
      ribbon:
        enabled: false # 禁用Ribbon，使用Spring Cloud LoadBalancer
      retry:
        enabled: true # 启用重试机制
      health-check:
        initial-delay: 0 # 健康检查初始延迟
        interval: 25s # 健康检查间隔


logging:
  level: 
    # (可选) 将 Reactor Netty 的日志也设为 DEBUG，可以看到更底层的网络交互
    '[reactor.netty.http.client]': debug
    '[com.alibaba.nacos]': debug
    '[org.springframework.cloud.gateway]': debug
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%thread]){blue} %clr(%-5level){green} %clr(%logger{36}){cyan}:%clr(%L){magenta} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/api-gateway.log
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 30
      file-name-pattern: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

jwt:
  secret: HhyD5jnwwGbyecOrbkAY6OEWNM/zDgF2qwFlF4MFAHznR4AaLweF8Xu71MF4TaYUfX7dRY9JIzOgF/yTYqx5Qg==
  # 24小时
  expiration: 86400000