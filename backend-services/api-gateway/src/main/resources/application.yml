server:
  port: 8080 # 所有后端请求的入口

spring:
  application:
    name: api-gateway

  cloud:
    nacos:
      discovery:
        server-addr: 3.84.225.222:8848
    gateway:
      discovery:
        locator:
          enabled: true # 开启基于服务发现的路由功能
          lower-case-service-id: true
      routes:
        # 用户服务Swagger路由 - 必须放在通用路由之前
        - id: user_swagger_ui
          uri: lb://user-service
          predicates:
            - Path=/api/user/swagger-ui/**
          filters:
            - StripPrefix=2

        - id: user_swagger_docs
          uri: lb://user-service
          predicates:
            - Path=/api/user/v3/api-docs/**
          filters:
            - StripPrefix=2

        - id: user_swagger_webjars
          uri: lb://user-service
          predicates:
            - Path=/api/user/webjars/**
          filters:
            - StripPrefix=2

        - id: user_swagger_config
          uri: lb://user-service
          predicates:
            - Path=/api/user/v3/api-docs/swagger-config
          filters:
            - StripPrefix=2

        # 问答服务Swagger路由 - 必须放在通用路由之前
        - id: qa_swagger_ui
          uri: lb://qa-service
          predicates:
            - Path=/api/qa/swagger-ui/**
          filters:
            - StripPrefix=2

        - id: qa_swagger_docs
          uri: lb://qa-service
          predicates:
            - Path=/api/qa/v3/api-docs/**
          filters:
            - StripPrefix=2

        - id: qa_swagger_webjars
          uri: lb://qa-service
          predicates:
            - Path=/api/qa/webjars/**
          filters:
            - StripPrefix=2

        - id: qa_swagger_config
          uri: lb://qa-service
          predicates:
            - Path=/api/qa/v3/api-docs/swagger-config
          filters:
            - StripPrefix=2

        # 用户服务路由
        - id: user_service_route
          uri: lb://user-service # lb:// 表示从Nacos负载均衡地选择一个user-service实例
          predicates:
            - Path=/api/user/** # 匹配所有/api/user/开头的请求
          filters:
            - StripPrefix=0 # 不去掉路径前缀

        # JWT认证服务路由
        - id: auth_service_route
          uri: lb://user-service
          predicates:
            - Path=/api/auth/** # 匹配所有/api/auth/开头的请求
          filters:
            - StripPrefix=0

        # 问答服务路由
        - id: qa_service_route
          uri: lb://qa-service
          predicates:
            - Path=/api/qa/** # 匹配所有/api/qa/开头的请求
          filters:
            - StripPrefix=0

      # 全局CORS配置
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://127.0.0.1:3000"
              - "http://192.168.31.171:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600

    # 负载均衡配置
    loadbalancer:
      ribbon:
        enabled: false # 禁用Ribbon，使用Spring Cloud LoadBalancer
      retry:
        enabled: true # 启用重试机制
      health-check:
        initial-delay: 0 # 健康检查初始延迟
        interval: 25s # 健康检查间隔

# Actuator监控端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway # 暴露健康检查、信息和网关路由端点
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true # 启用网关端点

# 日志配置
logging:
  level:
    com.ai.qa.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.loadbalancer: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
